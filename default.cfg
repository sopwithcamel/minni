minni:
{
	dfs:
	{
		master = "127.0.0.1";
		port = 20000;
	};

#	input_files = "/10mil5x200b.txt";
	input_files = "/10mil10x10b.txt";
#	input_files = "/100.10x10b.txt";
#	input_files = "/randinput.txt";
#	input_files = "/links.txt";
	input_type = "chunk";
	#input_files = "/test/";
	#input_type = "file";
#	delimiter = " .\n\r\'\"?,;:!*()-\uFEFF";
	delimiter = "\n\r";
	#delimiter_second = ": ";
	query = 0;
	query_file = "/mnt/hamur/query.txt";
	output_files = "/";
	so_name = "/usr/local/lib/minni/wordcount.so";
	#so_name = "/home/hamur/code/minni/src/lib/apps/.libs/img.so";
#	so_name = "/home/hamur/code/minni/src/lib/apps/.libs/pagerank.so";
	max_maps = 1;
	max_reduces = 1;

    debug:
    {
        heapprofile = 1;
    };

	common:
	{
		nodes_file = "example/nodes.conf";
		key:
		{
			empty = "mamihlapinatapai";
			maxsize = 1000;
		};
		value:
		{
			size = 8;
		};

		file_length = 100;
#		file_prefix = "/mnt/hamur/minni_data/";
		file_prefix = "/localfs/hamur/";
		buffer_size = 67108864;
	};

	tbb:
	{
		buffers = 1;
		threads = 4;

 		token_size = 1048576; /* in bytes */
 		max_keys_per_token = 200000;
	};

    /* Should be one of "cbt", "sparsehash" */
    internal:
    {
        selected = "cbt";

        cbt:
        {
            buffer_size = 31457280;
            fanout = 8;
        };
        
        sparsehash:
        {
            partitions = 1;
        };
    };

	aggregator:
	{
		/* Should be one of "bucket", "hashsort" */
		selected:
		{
			map = "bucket";
			reduce = "bucket";
		};

		bucket:
		{
			capacity = 1500000;
			aggregate = 1;
			num = 1;
		};

		hashsort:
		{
			capacity = 10000000;
			aggregate = 1;
 			nsort_mem = 1200; // MB
		};
	};
};
